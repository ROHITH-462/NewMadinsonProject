<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-03-17T17:38:22 IST" name="com.htc.Madinson" finished-at="2021-03-17T17:39:24 IST" duration-ms="62540">
    <groups>
    </groups>
    <test started-at="2021-03-17T17:38:22 IST" name="Madinson WebPages Test" finished-at="2021-03-17T17:39:24 IST" duration-ms="62540">
      <class name="com.htc.newMadinson.test.CheckOutTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.htc.newMadinson.test.CheckOutTest@732c2a62]" started-at="2021-03-17T17:38:47 IST" name="setUp" finished-at="2021-03-17T17:38:53 IST" duration-ms="5811" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="checkOutPageTest_shouldSelectTheProduct_orderShouldBePlaced(java.util.Map)[pri:0, instance:com.htc.newMadinson.test.CheckOutTest@732c2a62]" started-at="2021-03-17T17:38:53 IST" name="checkOutPageTest_shouldSelectTheProduct_orderShouldBePlaced" data-provider="Billing_Information" finished-at="2021-03-17T17:39:24 IST" duration-ms="30114" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=123spa, Address=1,abc, Telephone=9.898989898E9, FirstName=Rohith, PostalCode=600079.0, Country=India, LastName=B, City=chennai, ShirtQuantity=2.0, email=dine.rohi333@htc.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkOutPageTest_shouldSelectTheProduct_orderShouldBePlaced -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.htc.newMadinson.test.CheckOutTest@732c2a62]" started-at="2021-03-17T17:39:24 IST" name="tearDown" finished-at="2021-03-17T17:39:24 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.htc.newMadinson.test.CheckOutTest -->
      <class name="com.htc.newMadinson.test.RegistrationTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.htc.newMadinson.test.RegistrationTest@a3d8174]" started-at="2021-03-17T17:38:22 IST" name="setUp" finished-at="2021-03-17T17:38:27 IST" duration-ms="5625" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="createNewAccountTest_credantialsShouldBeFetchedFromExcel_shouldRegisterSuccessful(java.util.Map)[pri:0, instance:com.htc.newMadinson.test.RegistrationTest@a3d8174]" started-at="2021-03-17T17:38:29 IST" name="createNewAccountTest_credantialsShouldBeFetchedFromExcel_shouldRegisterSuccessful" data-provider="Registration_Details" finished-at="2021-03-17T17:38:32 IST" duration-ms="2935" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Email=abc729@htc.com, LastName=B, FirstName=xyz, Password=123spa, ConfirmPassword=123spa}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//span[text() = "Thank you for registering with Madison Island."]"}
  (Session info: chrome=89.0.4389.90)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DELL-PC', ip: '192.168.1.11', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '15.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 89.0.4389.90, chrome: {chromedriverVersion: 88.0.4324.96 (68dba2d8a0b14..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:50845}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: da0fd7d1dc36a5552d898dfbecd8ea5c
*** Element info: {Using=xpath, value=//span[text() = "Thank you for registering with Madison Island."]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//span[text() = "Thank you for registering with Madison Island."]"}
  (Session info: chrome=89.0.4389.90)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DELL-PC', ip: '192.168.1.11', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '15.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 89.0.4389.90, chrome: {chromedriverVersion: 88.0.4324.96 (68dba2d8a0b14..., userDataDir: C:\Users\DELL\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:50845}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: da0fd7d1dc36a5552d898dfbecd8ea5c
*** Element info: {Using=xpath, value=//span[text() = "Thank you for registering with Madison Island."]}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at com.htc.newMadinson.pageObjects.RegistrationPage.registrationAssertionText(RegistrationPage.java:49)
at com.htc.newMadinson.test.RegistrationTest.createNewAccountTest_credantialsShouldBeFetchedFromExcel_shouldRegisterSuccessful(RegistrationTest.java:21)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createNewAccountTest_credantialsShouldBeFetchedFromExcel_shouldRegisterSuccessful -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.htc.newMadinson.test.RegistrationTest@a3d8174]" started-at="2021-03-17T17:38:33 IST" name="tearDown" finished-at="2021-03-17T17:38:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.htc.newMadinson.test.RegistrationTest -->
      <class name="com.htc.newMadinson.test.LoginTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.htc.newMadinson.test.LoginTest@1ba9117e]" started-at="2021-03-17T17:38:33 IST" name="setUp" finished-at="2021-03-17T17:38:38 IST" duration-ms="5802" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginTest(java.util.Map)[pri:0, instance:com.htc.newMadinson.test.LoginTest@1ba9117e]" started-at="2021-03-17T17:38:39 IST" name="loginTest" data-provider="Login" finished-at="2021-03-17T17:38:44 IST" duration-ms="4933" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Expected=MY DASHBOARD, Email=dine.rohi333@htc.com, Password=123spa}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method signature="loginTest(java.util.Map)[pri:0, instance:com.htc.newMadinson.test.LoginTest@1ba9117e]" started-at="2021-03-17T17:38:44 IST" name="loginTest" data-provider="Login" finished-at="2021-03-17T17:38:47 IST" duration-ms="2786" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Expected=Invalid login or password., Email=jai24@htc.com, Password=123welcome}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.htc.newMadinson.test.LoginTest@1ba9117e]" started-at="2021-03-17T17:38:47 IST" name="tearDown" finished-at="2021-03-17T17:38:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.htc.newMadinson.test.LoginTest -->
    </test> <!-- Madinson WebPages Test -->
  </suite> <!-- com.htc.Madinson -->
</testng-results>
